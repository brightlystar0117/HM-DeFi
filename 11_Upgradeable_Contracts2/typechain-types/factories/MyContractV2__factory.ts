/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MyContractV2, MyContractV2Interface } from "../MyContractV2";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "getName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "setName",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "setValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600054610100900460ff16158080156100315750600054600160ff909116105b8061005c575061004a3061015e60201b61034b1760201c565b15801561005c575060005460ff166001145b6100c35760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b6000805460ff1916600117905580156100e6576000805461ff0019166101001790555b610112604051806060016040528060278152602001610939602791393361016d60201b6103671760201c565b8015610158576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5061023f565b6001600160a01b03163b151590565b6101b682826040516024016101839291906101db565b60408051601f198184030181529190526020810180516001600160e01b0390811663319af33360e01b179091526101ba16565b5050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6040815260008351806040840152815b8181101561020857602081870181015160608684010152016101eb565b818111156102195782606083860101525b506001600160a01b0393909316602083015250601f91909101601f191601606001919050565b6106eb8061024e6000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80635524107711610050578063552410771461009b578063c47f0027146100b0578063c4d66de8146100c357600080fd5b806317d7de7c1461006c578063209652551461008a575b600080fd5b6100746100d6565b60405161008191906105d7565b60405180910390f35b600154604051908152602001610081565b6100ae6100a9366004610574565b610168565b005b6100ae6100be3660046104ca565b610179565b6100ae6100d136600461048f565b610190565b6060600380546100e590610646565b80601f016020809104026020016040519081016040528092919081815260200182805461011190610646565b801561015e5780601f106101335761010080835404028352916020019161015e565b820191906000526020600020905b81548152906001019060200180831161014157829003601f168201915b5050505050905090565b61017381600a610622565b60015550565b805161018c9060039060208401906103f6565b5050565b600054610100900460ff16158080156101b05750600054600160ff909116105b806101ca5750303b1580156101ca575060005460ff166001145b61025a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a6564000000000000000000000000000000000000606482015260840160405180910390fd5b6000805460ff19166001179055801561027d576000805461ff0019166101001790555b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8416179055604080516060810190915260218082526102e09190610698602083013983610367565b6103026040518060600160405280602681526020016106b96026913933610367565b801561018c576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b61018c828260405160240161037d9291906105ea565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f319af3330000000000000000000000000000000000000000000000000000000017905280516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b82805461040290610646565b90600052602060002090601f016020900481019282610424576000855561046a565b82601f1061043d57805160ff191683800117855561046a565b8280016001018555821561046a579182015b8281111561046a57825182559160200191906001019061044f565b5061047692915061047a565b5090565b5b80821115610476576000815560010161047b565b6000602082840312156104a0578081fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146104c3578182fd5b9392505050565b6000602082840312156104db578081fd5b813567ffffffffffffffff808211156104f2578283fd5b818401915084601f830112610505578283fd5b81358181111561051757610517610681565b604051601f8201601f19908116603f0116810190838211818310171561053f5761053f610681565b81604052828152876020848701011115610557578586fd5b826020860160208301379182016020019490945295945050505050565b600060208284031215610585578081fd5b5035919050565b60008151808452815b818110156105b157602081850181015186830182015201610595565b818111156105c25782602083870101525b50601f01601f19169290920160200192915050565b6020815260006104c3602083018461058c565b6040815260006105fd604083018561058c565b905073ffffffffffffffffffffffffffffffffffffffff831660208301529392505050565b6000821982111561064157634e487b7160e01b81526011600452602481fd5b500190565b600181811c9082168061065a57607f821691505b6020821081141561067b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfe4d79436f6e747261637456323a3a696e697469616c697a652d61646d696e203d204d79436f6e747261637456323a3a696e697469616c697a652d6d73672e73656e646572203d20a164736f6c6343000804000a4d79436f6e747261637456323a3a636f6e7374727563746f722d6d73672e73656e646572203d20";

export class MyContractV2__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MyContractV2> {
    return super.deploy(overrides || {}) as Promise<MyContractV2>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MyContractV2 {
    return super.attach(address) as MyContractV2;
  }
  connect(signer: Signer): MyContractV2__factory {
    return super.connect(signer) as MyContractV2__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyContractV2Interface {
    return new utils.Interface(_abi) as MyContractV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MyContractV2 {
    return new Contract(address, _abi, signerOrProvider) as MyContractV2;
  }
}
