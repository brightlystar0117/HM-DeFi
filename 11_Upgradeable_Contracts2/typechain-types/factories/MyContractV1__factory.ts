/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MyContractV1, MyContractV1Interface } from "../MyContractV1";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "getValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "setValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600054610100900460ff16158080156100315750600054600160ff909116105b8061005c575061004a3061015e60201b61023a1760201c565b15801561005c575060005460ff166001145b6100c35760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b6000805460ff1916600117905580156100e6576000805461ff0019166101001790555b61011260405180606001604052806027815260200161064b602791393361016d60201b6102561760201c565b8015610158576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5061023f565b6001600160a01b03163b151590565b6101b682826040516024016101839291906101db565b60408051601f198184030181529190526020810180516001600160e01b0390811663319af33360e01b179091526101ba16565b5050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6040815260008351806040840152815b8181101561020857602081870181015160608684010152016101eb565b818111156102195782606083860101525b506001600160a01b0393909316602083015250601f91909101601f191601606001919050565b6103fd8061024e6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632096525514610046578063552410771461005b578063c4d66de814610070575b600080fd5b60015460405190815260200160405180910390f35b61006e610069366004610320565b600155565b005b61006e61007e3660046102e5565b600054610100900460ff161580801561009e5750600054600160ff909116105b806100b85750303b1580156100b8575060005460ff166001145b610148576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a6564000000000000000000000000000000000000606482015260840160405180910390fd5b6000805460ff19166001179055801561016b576000805461ff0019166101001790555b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8416179055604080516060810190915260218082526101ce91906103d0602083013983610256565b6101f06040518060600160405280602681526020016103aa6026913933610256565b8015610236576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b610236828260405160240161026c929190610338565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f319af3330000000000000000000000000000000000000000000000000000000017905280516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6000602082840312156102f6578081fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610319578182fd5b9392505050565b600060208284031215610331578081fd5b5035919050565b6040815260008351806040840152815b818110156103655760208187018101516060868401015201610348565b818111156103765782606083860101525b5073ffffffffffffffffffffffffffffffffffffffff93909316602083015250601f91909101601f19160160600191905056fe4d79436f6e747261637456313a3a696e697469616c697a652d6d73672e73656e646572203d204d79436f6e747261637456313a3a696e697469616c697a652d61646d696e203d20a164736f6c6343000804000a4d79436f6e747261637456313a3a636f6e7374727563746f722d6d73672e73656e646572203d20";

export class MyContractV1__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MyContractV1> {
    return super.deploy(overrides || {}) as Promise<MyContractV1>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MyContractV1 {
    return super.attach(address) as MyContractV1;
  }
  connect(signer: Signer): MyContractV1__factory {
    return super.connect(signer) as MyContractV1__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyContractV1Interface {
    return new utils.Interface(_abi) as MyContractV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MyContractV1 {
    return new Contract(address, _abi, signerOrProvider) as MyContractV1;
  }
}
